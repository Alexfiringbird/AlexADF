{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "数据工厂名称",
			"defaultValue": "AlexDatafactoryTest"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "“AzureBlobStorage1”的“connectionString”的安全字符串"
		},
		"AzureDatabricksDeltaLake1_accessToken": {
			"type": "secureString",
			"metadata": "“AzureDatabricksDeltaLake1”的“accessToken”的安全字符串"
		},
		"AzureDatabricksDeltaLake2_kbb_accessToken": {
			"type": "secureString",
			"metadata": "“AzureDatabricksDeltaLake2_kbb”的“accessToken”的安全字符串"
		},
		"AzureFileStorage1_connectionString": {
			"type": "secureString",
			"metadata": "“AzureFileStorage1”的“connectionString”的安全字符串"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "“AzureSqlDatabase1”的“password”的安全字符串"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "“AzureSynapseAnalytics1”的“connectionString”的安全字符串"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "“FileServer1”的“password”的安全字符串"
		},
		"LS301_ASQL_Parm_connectionString": {
			"type": "secureString",
			"metadata": "“LS301_ASQL_Parm”的“connectionString”的安全字符串",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().P_LS_Host};Initial Catalog=@{linkedService().P_LS_DBName};User ID=@{linkedService().P_LS_UserName}"
		},
		"LS304_ASQL_ADF_SchProcFwk_connectionString": {
			"type": "secureString",
			"metadata": "“LS304_ASQL_ADF_SchProcFwk”的“connectionString”的安全字符串",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=damadffwk01-prd01-sqldb-e2.database.chinacloudapi.cn;Initial Catalog=ADF_SchProcFwk;User ID=etl_prd_dw_pm"
		},
		"Sftp1_password": {
			"type": "secureString",
			"metadata": "“Sftp1”的“password”的安全字符串"
		},
		"alexdevsql_connectionString": {
			"type": "secureString",
			"metadata": "“alexdevsql”的“connectionString”的安全字符串"
		},
		"alexstoragegen2_accountKey": {
			"type": "secureString",
			"metadata": "“alexstoragegen2”的“accountKey”的安全字符串"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "alexsqlserver.database.chinacloudapi.cn"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "alextes"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "alex"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\alexdevvm\\localshare"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "alex"
		},
		"LS300_AKV_damakv02_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://test0311sqlcolumnkey.vault.azure.cn/"
		},
		"RestTest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://zlxocrtest.cognitiveservices.azure.cn/vision/v3.2/read/analyze"
		},
		"Sftp1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "10.1.0.6"
		},
		"Sftp1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sftptest"
		},
		"alexstoragegen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://alexstoragegen2.dfs.core.chinacloudapi.cn/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SFTPTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "SftpReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": false,
									"disableChunking": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sftpbin",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-07-03T06:12:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sftpbin')]",
				"[concat(variables('factoryId'), '/datasets/Binary1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/W01_FullDataCopy_Parm_V02')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FullDataCopyFromSrc",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Log Taks Running",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.04:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "TaskID",
								"value": "@pipeline().parameters.P_P_TaskID"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@pipeline().parameters.P_P_SqlQueryString",
									"type": "Expression"
								},
								"queryTimeout": "06:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "@{pipeline().parameters.P_P_PreRunScript}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS301_001_DBParm_Non_Src",
								"type": "DatasetReference",
								"parameters": {
									"P_DS_Host": {
										"value": "@pipeline().parameters.P_P_SourceServer",
										"type": "Expression"
									},
									"P_DS_DBName": {
										"value": "@pipeline().parameters.P_P_SourceDBName",
										"type": "Expression"
									},
									"P_DS_UserName": {
										"value": "@pipeline().parameters.P_P_SourceUserName",
										"type": "Expression"
									},
									"P_DS_PassWrod_KV": {
										"value": "@pipeline().parameters.P_P_SourcePassWord_KV",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS301_004_DBParm_TBParm_Sink",
								"type": "DatasetReference",
								"parameters": {
									"P_DS_Host": {
										"value": "@pipeline().parameters.P_P_SinkServer",
										"type": "Expression"
									},
									"P_DS_DBName": {
										"value": "@pipeline().parameters.P_P_SinkDBName",
										"type": "Expression"
									},
									"P_DS_UserName": {
										"value": "@pipeline().parameters.P_P_SinkUserName",
										"type": "Expression"
									},
									"P_DS_PassWrod_KV": {
										"value": "@pipeline().parameters.P_P_SinkPassWord_KV",
										"type": "Expression"
									},
									"P_DS_Schema": {
										"value": "@pipeline().parameters.P_P_SinkSchema",
										"type": "Expression"
									},
									"P_DS_TableName": {
										"value": "@pipeline().parameters.P_P_SinkTableName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Log Taks Running",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "TaskID",
								"value": "@pipeline().parameters.P_P_TaskID"
							}
						],
						"typeProperties": {
							"storedProcedureName": "[[adf].[P_SetLogTaskRunning]",
							"storedProcedureParameters": {
								"DistributeTasksPLRunId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "Guid"
								},
								"ExceFlag": {
									"value": "41",
									"type": "Int32"
								},
								"ExecutionInfo": {
									"value": null,
									"type": "String"
								},
								"GetTasksPLRunId": {
									"value": null,
									"type": "Guid"
								},
								"ParmSettings": {
									"value": null,
									"type": "String"
								},
								"PollTasksPLRunId": {
									"value": null,
									"type": "Guid"
								},
								"StepDesc": {
									"value": {
										"value": "@concat(pipeline().Pipeline, ':Update TaskExecution TaskStatus = 1-Running')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TaskId": {
									"value": {
										"value": "@pipeline().parameters.P_P_TaskID",
										"type": "Expression"
									},
									"type": "String"
								},
								"TaskKey": {
									"value": {
										"value": "@pipeline().parameters.P_P_TaskKey",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"WorkerPLName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"WorkerPLRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "Guid"
								},
								"InitiateTasksDT": {
									"value": {
										"value": "@pipeline().parameters.P_P_InitiateTasksDT",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS304_ASQL_ADF_SchProcFwk",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set Log Taks Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FullDataCopyFromSrc",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "TaskID",
								"value": "@pipeline().parameters.P_P_TaskID"
							}
						],
						"typeProperties": {
							"storedProcedureName": "[[adf].[P_SetLogTaskSuccess]",
							"storedProcedureParameters": {
								"DurationSec": {
									"value": {
										"value": "@activity('FullDataCopyFromSrc').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionInfo": {
									"value": null,
									"type": "String"
								},
								"WorkerPLName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"WorkerPLRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "Guid"
								},
								"QueueDurationSec": {
									"value": {
										"value": "@activity('FullDataCopyFromSrc').output.executionDetails[0].profile.queue.duration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RowsCopied": {
									"value": {
										"value": "@activity('FullDataCopyFromSrc').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"RowsRead": {
									"value": {
										"value": "@activity('FullDataCopyFromSrc').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TaskID": {
									"value": {
										"value": "@pipeline().parameters.P_P_TaskID",
										"type": "Expression"
									},
									"type": "String"
								},
								"TaskKey": {
									"value": {
										"value": "@pipeline().parameters.P_P_TaskKey",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"Throughput_Kb": {
									"value": {
										"value": "@activity('FullDataCopyFromSrc').output.throughput",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"PollTasksPLRunId": {
									"value": null,
									"type": "Guid"
								},
								"GetTasksPLRunId": {
									"value": null,
									"type": "Guid"
								},
								"DistributeTasksPLRunId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "Guid"
								},
								"StepDesc": {
									"value": {
										"value": "@concat(pipeline().Pipeline,':Update TaskExecution TaskStatus = 2-Success')",
										"type": "Expression"
									},
									"type": "String"
								},
								"ParmSettings": {
									"value": null,
									"type": "String"
								},
								"ExceFlag": {
									"value": "42",
									"type": "Int32"
								},
								"InitiateTasksDT": {
									"value": {
										"value": "@pipeline().parameters.P_P_InitiateTasksDT",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS304_ASQL_ADF_SchProcFwk",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set Log Taks Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FullDataCopyFromSrc",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "TaskID",
								"value": "@pipeline().parameters.P_P_TaskID"
							}
						],
						"typeProperties": {
							"storedProcedureName": "[[adf].[P_SetLogTaskFailed]",
							"storedProcedureParameters": {
								"ErroInfo": {
									"value": {
										"value": "@concat('{\"Code\":'\n,activity('FullDataCopyFromSrc').output.errors[0].Code\n,',\"Message\":\"'\n,activity('FullDataCopyFromSrc').output.errors[0].Message\n,'\"}')\n",
										"type": "Expression"
									},
									"type": "String"
								},
								"WorkerPLName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"WorkerPLRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "Guid"
								},
								"TaskID": {
									"value": {
										"value": "@pipeline().parameters.P_P_TaskID",
										"type": "Expression"
									},
									"type": "String"
								},
								"TaskKey": {
									"value": {
										"value": "@pipeline().parameters.P_P_TaskKey",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"QueueDurationSec": {
									"value": {
										"value": "@activity('FullDataCopyFromSrc').output.executionDetails[0].profile.queue.duration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"DurationSec": {
									"value": {
										"value": "@activity('FullDataCopyFromSrc').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ExecutionInfo": {
									"value": null,
									"type": "String"
								},
								"PollTasksPLRunId": {
									"value": null,
									"type": "String"
								},
								"GetTasksPLRunId": {
									"value": null,
									"type": "String"
								},
								"DistributeTasksPLRunId": {
									"value": {
										"value": "@pipeline()?.TriggeredByPipelineRunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StepDesc": {
									"value": {
										"value": "@concat(pipeline().Pipeline,':Update TaskExecution TaskStatus = 3-Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExceFlag": {
									"value": "42",
									"type": "Int32"
								},
								"ParmSettings": {
									"value": null,
									"type": "String"
								},
								"InitiateTasksDT": {
									"value": {
										"value": "@pipeline().parameters.P_P_InitiateTasksDT",
										"type": "Expression"
									},
									"type": "Int64"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS304_ASQL_ADF_SchProcFwk",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SetTaskStatusSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set Log Taks Success",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "TaskID",
								"value": "@pipeline().parameters.P_P_TaskID"
							}
						],
						"typeProperties": {
							"storedProcedureName": "[[adf].[P_SetTaskStatus]",
							"storedProcedureParameters": {
								"TaskKey": {
									"value": {
										"value": "@pipeline().parameters.P_P_TaskKey",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TaskStatus": {
									"value": "2",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS304_ASQL_ADF_SchProcFwk",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SetTaskStatusFailed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set Log Taks Failed",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "TaskID",
								"value": "@pipeline().parameters.P_P_TaskID"
							}
						],
						"typeProperties": {
							"storedProcedureName": "[[adf].[P_SetTaskStatus]",
							"storedProcedureParameters": {
								"TaskKey": {
									"value": {
										"value": "@pipeline().parameters.P_P_TaskKey",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"TaskStatus": {
									"value": "3",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS304_ASQL_ADF_SchProcFwk",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_P_TaskKey": {
						"type": "int",
						"defaultValue": 3
					},
					"P_P_TaskID": {
						"type": "string",
						"defaultValue": "WalkSource2_distinct_ADF001"
					},
					"P_P_SourceServer": {
						"type": "string",
						"defaultValue": "adfsqllab.database.chinacloudapi.cn"
					},
					"P_P_SourceDBName": {
						"type": "string",
						"defaultValue": "frameworkmetadata"
					},
					"P_P_SourceUserName": {
						"type": "string",
						"defaultValue": "sqladmin"
					},
					"P_P_SourcePassWord_KV": {
						"type": "string",
						"defaultValue": "AZ-ODS-YueXiuMeasures-PRD-PassWord"
					},
					"P_P_SqlQueryString": {
						"type": "string",
						"defaultValue": "SELECT RunKey       ,osrc       ,tgt       ,lvl       ,objecttype       ,dbo.getlocaldate(8) DataDate   FROM dbo.WalkSource2_distinct"
					},
					"P_P_PreRunScript": {
						"type": "string",
						"defaultValue": "IF OBJECT_ID('dbo.dwd_WalkSource2_distinct','U') IS NOT NULL TRUNCATE TABLE dbo.dwd_WalkSource2_distinct"
					},
					"P_P_SinkServer": {
						"type": "string",
						"defaultValue": "adfsqllab.database.chinacloudapi.cn"
					},
					"P_P_SinkDBName": {
						"type": "string",
						"defaultValue": "frameworkmetadata"
					},
					"P_P_SinkSchema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"P_P_SinkTableName": {
						"type": "string",
						"defaultValue": "dwd_WalkSource2_distinct"
					},
					"P_P_SinkUserName": {
						"type": "string",
						"defaultValue": "sqladmin"
					},
					"P_P_SinkPassWord_KV": {
						"type": "string",
						"defaultValue": "AZ-DW-YueXiuMeasures-PRD-PassWord"
					},
					"P_P_InitiateTasksDT": {
						"type": "int"
					}
				},
				"folder": {
					"name": "00_YxEDW_SchProcFwk/02_JobWorkers"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-11T08:39:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS301_001_DBParm_Non_Src')]",
				"[concat(variables('factoryId'), '/datasets/DS301_004_DBParm_TBParm_Sink')]",
				"[concat(variables('factoryId'), '/linkedServices/LS304_ASQL_ADF_SchProcFwk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Ocp-Apim-Subscription-Key": "3c8dcbb4ddd54554879e11764af59db2",
								"InFile": "\"F:\\ocr.png\"",
								"ContentType": "multipart/form-data"
							},
							"url": "https://zlxocrtest.cognitiveservices.azure.cn/vision/v3.2/read/analyze",
							"connectVia": {
								"referenceName": "integrationRuntime1",
								"type": "IntegrationRuntimeReference"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-06T10:22:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "alexdevsql",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "  insert into testa (Name) select name from testb "
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 660
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {
						"duration": "0.00:10:00"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-25T07:16:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alexdevsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select name from testb",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Skipped"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "testvar",
							"value": {
								"value": "@activity('Lookup1').output.firstRow.name",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"testvar": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-24T02:10:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testcopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-12T06:35:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testcopys')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-06-12T06:35:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TestA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "yearmonth",
						"type": "varchar"
					},
					{
						"name": "salesdate",
						"type": "varchar"
					},
					{
						"name": "sellercode",
						"type": "varchar"
					},
					{
						"name": "seller_tier",
						"type": "varchar"
					},
					{
						"name": "buyercode",
						"type": "varchar"
					},
					{
						"name": "buyercode_v",
						"type": "varchar"
					},
					{
						"name": "channel1",
						"type": "varchar"
					},
					{
						"name": "channel2",
						"type": "varchar"
					},
					{
						"name": "channel3",
						"type": "varchar"
					},
					{
						"name": "channel4",
						"type": "varchar"
					},
					{
						"name": "product_code",
						"type": "varchar"
					},
					{
						"name": "brand_code",
						"type": "varchar"
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 16,
						"scale": 5
					},
					{
						"name": "qty",
						"type": "decimal",
						"precision": 19,
						"scale": 6
					},
					{
						"name": "stp",
						"type": "decimal",
						"precision": 19,
						"scale": 6
					},
					{
						"name": "stp_amount",
						"type": "decimal",
						"precision": 19,
						"scale": 6
					},
					{
						"name": "amount_ly",
						"type": "decimal",
						"precision": 16,
						"scale": 5
					},
					{
						"name": "qty_ly",
						"type": "decimal",
						"precision": 19,
						"scale": 6
					},
					{
						"name": "stp_ly",
						"type": "decimal",
						"precision": 34,
						"scale": 11
					},
					{
						"name": "stp_amount_ly",
						"type": "decimal",
						"precision": 34,
						"scale": 11
					},
					{
						"name": "target",
						"type": "decimal",
						"precision": 34,
						"scale": 11
					},
					{
						"name": "qty_target",
						"type": "decimal",
						"precision": 34,
						"scale": 11
					},
					{
						"name": "stp_target",
						"type": "decimal",
						"precision": 34,
						"scale": 11
					},
					{
						"name": "stp_qty_target",
						"type": "decimal",
						"precision": 34,
						"scale": 11
					},
					{
						"name": "t1_target",
						"type": "decimal",
						"precision": 34,
						"scale": 11
					},
					{
						"name": "t1_qty_target",
						"type": "decimal",
						"precision": 34,
						"scale": 11
					},
					{
						"name": "crt_dttm",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updt_dttm",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "channel5",
						"type": "varchar"
					},
					{
						"name": "actual_terminal_name",
						"type": "varchar"
					},
					{
						"name": "actual_terminal_code",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alexstoragegen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "tmpdata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alexstoragegen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alexstoragegen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ocr.PNG",
						"fileSystem": "tmp"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alexstoragegen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BinarySource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureFileStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": "D4657882-5C02-8919-F906-72ABFFE3BA0C_crm_snr_medconnect_work_order_vw.parquet"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFileStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binaryimg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "ocr.PNG"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS301_001_DBParm_Non_Src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS301_ASQL_Parm",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_DS_Host": {
						"type": "string",
						"defaultValue": "damods01-prd01-sqldb-e2.database.chinacloudapi.cn"
					},
					"P_DS_DBName": {
						"type": "string",
						"defaultValue": "ODS_YueXiuMeasures"
					},
					"P_DS_UserName": {
						"type": "string",
						"defaultValue": "xiantj_gp2"
					},
					"P_DS_PassWrod_KV": {
						"type": "string",
						"defaultValue": "AZ-ODS-YueXiuMeasures-PRD-PassWord"
					}
				},
				"folder": {
					"name": "00_YxEDW_SchPorcFwk/301_ASQL_DBParm"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS301_ASQL_Parm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS301_004_DBParm_TBParm_Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS301_ASQL_Parm",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"P_DS_Host": {
						"type": "string"
					},
					"P_DS_DBName": {
						"type": "string"
					},
					"P_DS_UserName": {
						"type": "string"
					},
					"P_DS_PassWrod_KV": {
						"type": "string"
					},
					"P_DS_Schema": {
						"type": "string"
					},
					"P_DS_TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "00_YxEDW_SchPorcFwk/301_ASQL_DBParm"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().P_DS_Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().P_DS_TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS301_ASQL_Parm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alexstoragegen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ocr.PNG",
						"fileSystem": "tmp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alexstoragegen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alexstoragegen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "tmpdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alexstoragegen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestTest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alexdevsql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "test",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TestA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alexdevsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alexdevsql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Testb"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alexdevsql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwsourcecsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alexstoragegen2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dw1.csv",
						"fileSystem": "tmp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "202008",
						"type": "String"
					},
					{
						"name": "Sep 16 2017 05:33",
						"type": "String"
					},
					{
						"name": "A100005",
						"type": "String"
					},
					{
						"name": "TierF",
						"type": "String"
					},
					{
						"name": "D1900034",
						"type": "String"
					},
					{
						"name": "D1900035",
						"type": "String"
					},
					{
						"name": "A端卖出",
						"type": "String"
					},
					{
						"name": "DEF",
						"type": "String"
					},
					{
						"name": "淘宝",
						"type": "String"
					},
					{
						"name": "京东自营",
						"type": "String"
					},
					{
						"name": "012210",
						"type": "String"
					},
					{
						"name": "01",
						"type": "String"
					},
					{
						"name": "86.2370153824971",
						"type": "String"
					},
					{
						"name": "99.5347081215748",
						"type": "String"
					},
					{
						"name": "67.7181149216919",
						"type": "String"
					},
					{
						"name": "31.4591793024257",
						"type": "String"
					},
					{
						"name": "81.6907908682203",
						"type": "String"
					},
					{
						"name": "84.8051783092344",
						"type": "String"
					},
					{
						"name": "99.1902175355657",
						"type": "String"
					},
					{
						"name": "3.26251983794501",
						"type": "String"
					},
					{
						"name": "69.9941983772415",
						"type": "String"
					},
					{
						"name": "52.6284142642414",
						"type": "String"
					},
					{
						"name": "93.4018658909024",
						"type": "String"
					},
					{
						"name": "68.7620282493355",
						"type": "String"
					},
					{
						"name": "54.6815434259742",
						"type": "String"
					},
					{
						"name": "8.1109949891041",
						"type": "String"
					},
					{
						"name": "1996-5-9 22:38:4526",
						"type": "String"
					},
					{
						"name": "1996-5-9 22:38:4527",
						"type": "String"
					},
					{
						"name": "自行采购",
						"type": "String"
					},
					{
						"name": "山西大药房连锁有限公司大雁塔店",
						"type": "String"
					},
					{
						"name": "D19000330",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alexstoragegen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/localpng')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "ocr.PNG"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sftpbin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sftp1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"folderPath": "/test"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Sftp1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-1712255893777130.2.databricks.azure.cn",
					"clusterId": "0415-030317-v8e64gz4",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake1_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake2_kbb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-1432872212310480.0.databricks.azure.cn",
					"clusterId": "0809-054006-456dayv",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake2_kbb_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFileStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureFileStorage1_connectionString')]",
					"fileShare": "alexfile"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS300_AKV_damakv02')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS300_AKV_damakv02_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS301_ASQL_Parm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "环境：PRD\nHost：Parm\n库名：Parm\nRT:AutoRT",
				"parameters": {
					"P_LS_Host": {
						"type": "string"
					},
					"P_LS_DBName": {
						"type": "string"
					},
					"P_LS_UserName": {
						"type": "string"
					},
					"P_LS_PassWord_KV": {
						"type": "string"
					}
				},
				"annotations": [
					"参数化Azure SQLDB数据源",
					"ProcFwk专用"
				],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS301_ASQL_Parm_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS300_AKV_damakv02",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().P_LS_PassWord_KV",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS300_AKV_damakv02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS304_ASQL_ADF_SchProcFwk')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "环境：PRD\nHost：damadffwk01-prd01-sqldb-e2.database.chinacloudapi.cn\n库名：ADF_SchPorcFwk\nRT:AutoRT\n",
				"annotations": [
					"ADF元数据",
					"ProcFwk专用"
				],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS304_ASQL_ADF_SchProcFwk_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS300_AKV_damakv02",
							"type": "LinkedServiceReference"
						},
						"secretName": "AZ-ADF-SchProcFwk-Prd-PassWord"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS300_AKV_damakv02')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestTest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestTest_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"Ocp-Apim-Subscription-Key": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp1_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/alexdevsql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('alexdevsql_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/alexstoragegen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('alexstoragegen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('alexstoragegen2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Name as string,",
						"          test as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(test = \"a\") ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		}
	]
}